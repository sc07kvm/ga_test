name: main

on:
  push:
    branches:
      - master

jobs:
  lint_code_style:
    runs-on: ubuntu-20.04   
    steps:
      - name: Checkout
        uses: actions/checkout@v2 
      - name: Install clang
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal main'        
          sudo apt-get install clang-format
      - name: Version clang
        run: clang-format --version
      - name: Lint the code
        run: clang-format-13 --Werror --dry-run --style=LLVM ./src/*
    
  lint_clang:
    runs-on: ubuntu-20.04 
    steps:
      - name: Checkout
        uses: actions/checkout@v2 
      - name: Install clang
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal main'
          sudo apt-get install clang-tools
      - name: Version clang
        run: clang --version    
      - name: Lint the code
        run: scan-build -v make

  test_linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install clang
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal main'  
          sudo apt-get install clang
      - name: Version clang
        run: clang --version  
      - name: Build and Test code
        run: make DEBUG=1 regress
      
  build_mac:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build code
        run: make
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: ga-test_mac
          path: ./bin/ga-test

  build_linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2  
      - name: Build code
        run: make
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: ga-test
          path: ./bin/ga-test

  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # This not work for nmake
      # - name: Add msbuild to PATH
      #   uses: microsoft/setup-msbuild@v1
      - name: Configure MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
      
      - name: Cache Externals
        id: cache-externals
        uses: actions/cache@v2
        with:
          path: .\externals\x64\Release
          key: ${{ runner.os }}-externals-x64-release
        
      - name: Install OpenSSL
        if: steps.cache-externals.outputs.cache-hit != 'true'
        run: | 
          curl -fsSL https://github.com/openssl/openssl/archive/OpenSSL_1_1_1i.zip -o OpenSSL_1_1_1i.zip
          7z x OpenSSL_1_1_1i.zip
          mkdir .\openssl-OpenSSL_1_1_1i\x64\Release
          cd .\openssl-OpenSSL_1_1_1i\x64\Release
          perl ..\..\Configure VC-WIN64A-masm
          nmake
          xcopy ..\..\include\openssl ..\..\..\externals\x64\Release\include\openssl\
          xcopy include\openssl ..\..\..\externals\x64\Release\include\openssl\ /y
          xcopy libssl.lib ..\..\..\externals\x64\Release\shared_lib\
          xcopy libcrypto.lib ..\..\..\externals\x64\Release\shared_lib\
          xcopy libssl-1_1.dll ..\..\..\externals\x64\Release\bin\
          xcopy libcrypto-1_1.dll ..\..\..\externals\x64\Release\bin\
      
      - name: Install PCRE
        if: steps.cache-externals.outputs.cache-hit != 'true'
        run: |
          curl -fsSL https://ftp.pcre.org/pub/pcre/pcre-8.44.zip -o pcre-8.44.zip
          7z x pcre-8.44.zip
          cd pcre-8.44
          cmake . -A x64 -DBUILD_SHARED_LIBS=ON
          msbuild -m PCRE.sln /p:Configuration=Release /p:Platform=x64
          xcopy pcre.h ..\externals\x64\Release\include\
          xcopy Release\pcre.lib ..\externals\x64\Release\shared_lib\
          xcopy Release\pcre.dll ..\externals\x64\Release\bin\

      - name: Build code
        run: msbuild .\vs17\ga_test.sln /property:Configuration=Release /property:Platform=x64 /m
      
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: ga-test.exe
          path: .\bin\x64\Release\ga-test.exe
